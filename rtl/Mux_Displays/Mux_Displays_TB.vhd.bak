library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity Mux_Displays_TB is
end Mux_Displays_TB;

architecture Behavioral of Mux_Displays_TB is
   -- Sinais para conectar ao componente Mux_Displays
   signal clk : STD_LOGIC := '0';                      -- Sinal de clock
   signal valor : STD_LOGIC_VECTOR(23 downto 0);       -- Valor de 24 bits (6 dígitos)
   signal digito_atual : STD_LOGIC_VECTOR(3 downto 0); -- Dígito atual para o BCD_7seg
   signal display_anodes : STD_LOGIC_VECTOR(5 downto 0); -- Anodos dos 6 displays

   -- Constante para o período do clock
   constant CLK_PERIOD : time := 10 ns;  -- Clock de 100 MHz (10 ns de período)
begin
   -- Instanciação do componente Mux_Displays
   UUT: entity work.Mux_Displays
      port map (
         clk => clk,
         valor => valor,
         digito_atual => digito_atual,
         display_anodes => display_anodes
      );

	-- Geração do clock
   process
   begin
      clk <= not clk;  -- Inverte o clock
      wait for CLK_PERIOD / 2;  -- Metade do período
   end process;

   -- Processo de teste
   process
   begin
      -- Inicializa o valor de 24 bits (6 dígitos)
      valor <= "000100100011010001010110";  -- Valor 123456 (em binário)

		-- Aguarda um ciclo completo de multiplexação (6 ciclos de clock)
      wait for 6 * CLK_PERIOD;

      -- Verifica se os dígitos e anodos estão corretos
      -- Display 0: Dígito 6
      assert digito_atual = "0110" and display_anodes = "111110" 
			report "Erro no Display 0" severity error;

      -- Aguarda mais um ciclo de clock
      wait for CLK_PERIOD;

      -- Display 1: Dígito 5
      assert digito_atual = "0101" and display_anodes = "111101"
         report "Erro no Display 1" severity error;

		-- Aguarda mais um ciclo de clock
      wait for CLK_PERIOD;

      -- Display 2: Dígito 4
      assert digito_atual = "0100" and display_anodes = "111011"
         report "Erro no Display 2" severity error;

      -- Aguarda mais um ciclo de clock
      wait for CLK_PERIOD;

      -- Display 3: Dígito 3
      assert digito_atual = "0011" and display_anodes = "110111"
         report "Erro no Display 3" severity error;

      -- Aguarda mais um ciclo de clock
      wait for CLK_PERIOD;

      -- Display 4: Dígito 2
      assert digito_atual = "0010" and display_anodes = "101111"
         report "Erro no Display 4" severity error;

      -- Aguarda mais um ciclo de clock
      wait for CLK_PERIOD;

      -- Display 5: Dígito 1
      assert digito_atual = "0001" and display_anodes = "011111"
         report "Erro no Display 5" severity error;

      -- Finaliza o teste
      wait;
   end process;
end Behavioral;